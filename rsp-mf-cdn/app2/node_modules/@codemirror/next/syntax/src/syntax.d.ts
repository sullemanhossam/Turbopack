import { Parser } from "lezer";
import { Tree } from "lezer-tree";
import { EditorState, Syntax, Extension, Facet } from "@codemirror/next/state";
export declare class LezerSyntax implements Syntax {
    readonly parser: Parser;
    readonly extension: Extension;
    readonly languageData: Facet<{
        [name: string]: any;
    }>;
    constructor(parser: Parser, config?: {
        languageData?: {
            [name: string]: any;
        };
    });
    getTree(state: EditorState): Tree;
    parsePos(state: EditorState): number;
    ensureTree(state: EditorState, upto: number, timeout?: number): Tree | null;
    languageDataFacetAt(state: EditorState, pos: number): Facet<{
        [name: string]: any;
    }, readonly {
        [name: string]: any;
    }[]>;
}
//# sourceMappingURL=syntax.d.ts.map