import { ContentView, DOMPos } from "./contentview";
import { DocView } from "./docview";
import { InlineView } from "./inlineview";
import { Rect } from "./dom";
import { LineDecoration, WidgetType, BlockType } from "./decoration";
import { Attrs } from "./attributes";
import { Text } from "@codemirror/next/state";
export interface BlockView extends ContentView {
    merge(from: number, to: number, source: ContentView | null, takeDeco: boolean): boolean;
    match(other: BlockView): boolean;
    split(at: number): BlockView;
    type: BlockType;
    dom: HTMLElement | null;
}
export declare class LineView extends ContentView implements BlockView {
    children: InlineView[];
    length: number;
    dom: HTMLElement | null;
    prevAttrs: Attrs | null | undefined;
    attrs: Attrs | null;
    breakAfter: number;
    merge(from: number, to: number, source: BlockView | null, takeDeco: boolean): boolean;
    split(at: number): LineView;
    transferDOM(other: LineView): void;
    setDeco(attrs: Attrs | null): void;
    append(child: InlineView): void;
    addLineDeco(deco: LineDecoration): void;
    domAtPos(pos: number): DOMPos;
    sync(): void;
    measureTextSize(): {
        lineHeight: number;
        charWidth: number;
    } | null;
    coordsAt(pos: number, side: number): Rect | null;
    match(_other: ContentView): boolean;
    get type(): BlockType;
    static find(docView: DocView, pos: number): LineView | null;
}
export declare class BlockWidgetView extends ContentView implements BlockView {
    widget: WidgetType;
    length: number;
    type: BlockType;
    open: number;
    dom: HTMLElement | null;
    parent: DocView | null;
    breakAfter: number;
    constructor(widget: WidgetType, length: number, type: BlockType, open?: number);
    merge(from: number, to: number, source: ContentView | null): boolean;
    domAtPos(pos: number): DOMPos;
    split(at: number): BlockWidgetView;
    get children(): any;
    sync(): void;
    get overrideDOMText(): Text;
    domBoundsAround(): null;
    match(other: ContentView): boolean;
}
//# sourceMappingURL=blockview.d.ts.map