{"version":3,"file":"index.js","sources":["../src/stringstream.js","../src/stream-syntax.js"],"sourcesContent":["import { countColumn } from \"@codemirror/next/text\";\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    return countColumn(string.slice(startIndex, end), startValue, tabSize);\n}\n// STRING STREAM\n/// Encapsulates a single line of input. Given to stream syntax code,\n/// which uses it to tokenize the content.\nexport class StringStream {\n    /// @internal\n    constructor(\n    /// The line.\n    string, \n    /// Current tab size.\n    tabSize) {\n        this.string = string;\n        this.tabSize = tabSize;\n        /// The current position on the line.\n        this.pos = 0;\n        /// The start position of the current token.\n        this.start = 0;\n        this.lineStart = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /// True if we are at the end of the line.\n    eol() { return this.pos >= this.string.length; }\n    /// True if we are at the start of the line.\n    sol() { return this.pos == this.lineStart; }\n    /// Get the next code unit after the current position, or undefined\n    /// if we're at the end of the line.\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /// Read the next code unit and advance `this.pos`.\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /// Match the next character against the given string, regular\n    /// expression, or predicate. Consume and return it if it matches.\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /// Continue matching characters that match the given string,\n    /// regular expression, or predicate function. Return true if any\n    /// characters were consumed.\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /// Consume whitespace ahead of `this.pos`. Return true if any was\n    /// found.\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /// Move to the end of the line.\n    skipToEnd() { this.pos = this.string.length; }\n    /// Move to directly before the given character, if found on the\n    /// current line.\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /// Move back `n` characters.\n    backUp(n) { this.pos -= n; }\n    /// Get the column position at `this.pos`.\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue - (this.lineStart ? countCol(this.string, this.lineStart, this.tabSize) : 0);\n    }\n    /// Get the indentation column of the current line.\n    indentation() {\n        return countCol(this.string, null, this.tabSize) -\n            (this.lineStart ? countCol(this.string, this.lineStart, this.tabSize) : 0);\n    }\n    /// Match the input against the given string or regular expression\n    /// (which should start with a `^`). Return true or the regexp match\n    /// if it matches.\n    ///\n    /// Unless `consume` is set to `false`, this will move `this.pos`\n    /// past the matched text.\n    ///\n    /// When matching a string `caseInsensitive` can be set to true to\n    /// make the match case-insensitive.\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /// Get the current token.\n    current() { return this.string.slice(this.start, this.pos); }\n    /// Hide the first `n` characters of the stream while running\n    /// `inner`. This can be useful for nesting modes.\n    hideFirstChars(n, inner) {\n        this.lineStart += n;\n        try {\n            return inner();\n        }\n        finally {\n            this.lineStart -= n;\n        }\n    }\n}\nexport class StringStreamCursor {\n    constructor(text, offset, tabSize = 4) {\n        this.offset = offset;\n        this.tabSize = tabSize;\n        this.iter = text.iterLines(offset);\n        this.curLineEnd = this.offset - 1;\n    }\n    next() {\n        let { value, done } = this.iter.next();\n        if (done)\n            throw new RangeError(\"Reached end of document\");\n        const res = new StringStream(value, this.tabSize);\n        this.offset = this.curLineEnd + 1;\n        this.curLineEnd += value.length + 1;\n        return res;\n    }\n}\n","import { StringStream, StringStreamCursor } from \"./stringstream\";\nimport { EditorState, StateField, StateEffect, Facet, languageDataProp } from \"@codemirror/next/state\";\nimport { ViewPlugin } from \"@codemirror/next/view\";\nimport { Tree, NodeType, NodeGroup } from \"lezer-tree\";\nimport { defaultTags } from \"@codemirror/next/highlight\";\nexport { StringStream };\nclass StreamParserInstance {\n    constructor(spec, languageData) {\n        this.token = spec.token;\n        this.blankLine = spec.blankLine || (() => { });\n        this.startState = spec.startState || (() => true);\n        this.copyState = spec.copyState || defaultCopyState;\n        this.indent = spec.indent || (() => -1);\n        this.docType = docID((spec.docProps || []).concat([[languageDataProp, languageData]]));\n    }\n    readToken(state, stream, editorState) {\n        stream.start = stream.pos;\n        for (let i = 0; i < 10; i++) {\n            let result = this.token(stream, state, editorState);\n            if (stream.pos > stream.start)\n                return result;\n        }\n        throw new Error(\"Stream parser failed to advance stream.\");\n    }\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\n/// A syntax provider that uses a stream parser.\nexport class StreamSyntax {\n    /// Create a stream syntax.\n    constructor(parser) {\n        this.languageData = Facet.define();\n        let parserInst = this.parser = new StreamParserInstance(parser, this.languageData);\n        let setSyntax = StateEffect.define();\n        this.field = StateField.define({\n            create(state) {\n                let start = new SyntaxState(Tree.empty, [parserInst.startState(state)], 1, 0, null);\n                start.advanceFrontier(parserInst, state, 25 /* Apply */);\n                start.tree = start.updatedTree;\n                return start;\n            },\n            update(value, tr) {\n                for (let effect of tr.effects)\n                    if (effect.is(setSyntax))\n                        return effect.value;\n                if (!tr.docChanged)\n                    return value;\n                let changeStart = -1;\n                tr.changes.iterChangedRanges(from => changeStart = changeStart < 0 ? from : changeStart);\n                let { from, number } = tr.state.doc.lineAt(changeStart);\n                let newValue = number >= value.frontierLine ? value.copy() : value.cut(number, from);\n                newValue.advanceFrontier(parserInst, tr.state, 25 /* Apply */);\n                newValue.tree = newValue.updatedTree;\n                return newValue;\n            }\n        });\n        this.extension = [\n            EditorState.syntax.of(this),\n            ViewPlugin.define(view => new HighlightWorker(view, this.parser, this.field, setSyntax)),\n            this.field,\n            EditorState.indentation.of((context, pos) => {\n                return context.state.field(this.field).getIndent(this.parser, context.state, pos);\n            })\n        ];\n    }\n    getTree(state) {\n        return state.field(this.field).tree;\n    }\n    parsePos(state) {\n        return state.field(this.field).frontierPos;\n    }\n    ensureTree(state, upto, timeout = 100) {\n        let field = state.field(this.field);\n        if (field.frontierPos < upto)\n            field.advanceFrontier(this.parser, state, timeout, upto);\n        return field.frontierPos < upto ? null : field.updatedTree;\n    }\n    // FIXME allow modes to extend this?\n    languageDataFacetAt() { return this.languageData; }\n}\nconst CacheStepShift = 6, CacheStep = 1 << CacheStepShift;\nconst MaxRecomputeDistance = 20e3;\nclass SyntaxState {\n    constructor(tree, \n    // Slot 0 stores the start state (line 1), slot 1 the\n    // state at the start of line 65, etc, so lineNo ==\n    // (index * CACHE_STEP) + 1\n    cache, frontierLine, frontierPos, frontierState) {\n        this.tree = tree;\n        this.cache = cache;\n        this.frontierLine = frontierLine;\n        this.frontierPos = frontierPos;\n        this.frontierState = frontierState;\n        this.working = -1;\n        this.updatedTree = tree;\n    }\n    copy() {\n        return new SyntaxState(this.updatedTree, this.cache.slice(), this.frontierLine, this.frontierPos, this.frontierState);\n    }\n    cut(line, pos) {\n        return new SyntaxState(this.updatedTree.cut(pos), this.cache.slice(0, (line >> CacheStepShift) + 1), line, pos, null);\n    }\n    maybeStoreState(parser, lineBefore, state) {\n        if (lineBefore % CacheStep == 0)\n            this.cache[(lineBefore - 1) >> CacheStepShift] = parser.copyState(state);\n    }\n    findState(parser, editorState, line) {\n        let cacheIndex = Math.min(this.cache.length - 1, (line - 1) >> CacheStepShift);\n        let cachedLine = (cacheIndex << CacheStepShift) + 1;\n        let startPos = editorState.doc.line(cachedLine).from;\n        if (line - cachedLine > CacheStep && editorState.doc.line(line).from - startPos > MaxRecomputeDistance)\n            return null;\n        let state = parser.copyState(this.cache[cacheIndex]);\n        let cursor = new StringStreamCursor(editorState.doc, startPos, editorState.tabSize);\n        for (let l = cachedLine; l < line; l++) {\n            let stream = cursor.next();\n            if (stream.eol()) {\n                parser.blankLine(state, editorState);\n            }\n            else {\n                while (!stream.eol())\n                    parser.readToken(state, stream, editorState);\n            }\n            this.maybeStoreState(parser, l, state);\n        }\n        return state;\n    }\n    advanceFrontier(parser, editorState, timeout, upto = editorState.doc.length) {\n        if (this.frontierPos >= editorState.doc.length)\n            return;\n        let sliceEnd = Date.now() + timeout;\n        let state = this.frontierState || this.findState(parser, editorState, this.frontierLine);\n        let cursor = new StringStreamCursor(editorState.doc, this.frontierPos, editorState.tabSize);\n        let buffer = [];\n        let line = this.frontierLine, pos = this.frontierPos;\n        while (pos < upto) {\n            let stream = cursor.next(), offset = cursor.offset;\n            if (stream.eol()) {\n                parser.blankLine(state, editorState);\n            }\n            else {\n                while (!stream.eol()) {\n                    let type = parser.readToken(state, stream, editorState);\n                    if (type)\n                        buffer.push(tokenID(type), offset + stream.start, offset + stream.pos, 4);\n                }\n            }\n            this.maybeStoreState(parser, line, state);\n            line++;\n            pos += stream.string.length + 1;\n            if (Date.now() > sliceEnd)\n                break;\n        }\n        let tree = Tree.build({ buffer,\n            group: nodeGroup,\n            topID: parser.docType }).balance();\n        this.updatedTree = this.updatedTree.append(tree).balance();\n        this.frontierLine = line;\n        this.frontierPos = pos;\n        this.frontierState = state;\n    }\n    getIndent(parser, state, pos) {\n        let line = state.doc.lineAt(pos);\n        let parseState = this.findState(parser, state, line.number);\n        if (parseState == null)\n            return -1;\n        let text = line.slice(pos - line.from, Math.min(line.to, pos + 100) - line.from);\n        return parser.indent(parseState, /^\\s*(.*)/.exec(text)[1], state);\n    }\n}\nlet requestIdle = typeof window != \"undefined\" && window.requestIdleCallback ||\n    ((callback, { timeout }) => setTimeout(callback, timeout));\nlet cancelIdle = typeof window != \"undefined\" && window.cancelIdleCallback || clearTimeout;\nclass HighlightWorker {\n    constructor(view, parser, field, setSyntax) {\n        this.view = view;\n        this.parser = parser;\n        this.field = field;\n        this.setSyntax = setSyntax;\n        this.working = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        if (update.docChanged)\n            this.scheduleWork();\n    }\n    scheduleWork() {\n        if (this.working > -1)\n            return;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.frontierPos >= state.doc.length)\n            return;\n        this.working = requestIdle(this.work, { timeout: 200 /* Pause */ });\n    }\n    work(deadline) {\n        this.working = -1;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.frontierPos >= state.doc.length)\n            return;\n        // Advance to the end of the viewport, and no further, by default\n        let end = this.view.viewport.to;\n        field.advanceFrontier(this.parser, state, deadline ? Math.max(50 /* MinSlice */, deadline.timeRemaining()) : 100 /* Slice */, end);\n        if (field.frontierPos < end)\n            this.scheduleWork();\n        else\n            this.view.dispatch({ effects: this.setSyntax.of(field.copy()) });\n    }\n    destroy() {\n        if (this.working >= 0)\n            cancelIdle(this.working);\n    }\n}\nconst tokenTable = Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeGroup = new NodeGroup(typeArray);\nconst warned = [];\nfunction tokenID(tag) {\n    let id = tokenTable[tag];\n    if (id == null) {\n        let tagID = 0;\n        try {\n            tagID = defaultTags.get(tag);\n        }\n        catch (e) {\n            if (!(e instanceof RangeError))\n                throw e;\n            if (warned.indexOf(tag) < 0) {\n                warned.push(tag);\n                console.warn(`'${tag}' is not a valid style tag`);\n            }\n            return tokenID(\"\");\n        }\n        id = tokenTable[tag] = typeArray.length;\n        typeArray.push(new NodeType(tag ? tag.replace(/ /g, \"_\") : \"_\", defaultTags.prop.set({}, tagID), id));\n    }\n    return id;\n}\nfunction docID(props) {\n    if (props.length == 0)\n        return tokenID(\"\");\n    let obj = Object.create(null);\n    for (let [prop, value] of props)\n        prop.set(obj, value);\n    let id = typeArray.length;\n    typeArray.push(new NodeType(\"document\", obj, id));\n    return id;\n}\n"],"names":[],"mappings":"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"}