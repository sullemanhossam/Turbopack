import { Text } from "@codemirror/next/text";
export declare class StringStream {
    string: string;
    tabSize: number;
    pos: number;
    start: number;
    private lineStart;
    private lastColumnPos;
    private lastColumnValue;
    eol(): boolean;
    sol(): boolean;
    peek(): string | undefined;
    next(): string | void;
    eat(match: string | RegExp | ((ch: string) => boolean)): string | void;
    eatWhile(match: string | RegExp | ((ch: string) => boolean)): boolean;
    eatSpace(): boolean;
    skipToEnd(): void;
    skipTo(ch: string): boolean | void;
    backUp(n: number): void;
    column(): number;
    indentation(): number;
    match(pattern: string | RegExp, consume?: boolean, caseInsensitive?: boolean): boolean | RegExpMatchArray | null;
    current(): string;
    hideFirstChars(n: number, inner: () => void): void;
}
export declare class StringStreamCursor {
    offset: number;
    readonly tabSize: number;
    private curLineEnd;
    private readonly iter;
    constructor(text: Text, offset: number, tabSize?: number);
    next(): StringStream;
}
//# sourceMappingURL=stringstream.d.ts.map