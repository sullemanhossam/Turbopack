export declare function getSelection(root: DocumentOrShadowRoot): Selection;
export declare function selectionCollapsed(domSel: Selection): boolean;
export declare function hasSelection(dom: HTMLElement, selection: Selection): boolean;
export declare function clientRectsFor(dom: Node): DOMRectList;
export declare function isEquivalentPosition(node: Node, off: number, targetNode: Node | null, targetOff: number): boolean;
export declare function domIndex(node: Node): number;
export declare function maxOffset(node: Node): number;
export declare type Rect = {
    left: number;
    right: number;
    top: number;
    bottom: number;
};
export declare function flattenRect(rect: Rect, left: boolean): {
    left: number;
    right: number;
    top: number;
    bottom: number;
};
export declare function scrollRectIntoView(dom: HTMLElement, rect: Rect): void;
export declare class DOMSelection {
    anchorNode: Node | null;
    anchorOffset: number;
    focusNode: Node | null;
    focusOffset: number;
    eq(domSel: Selection): boolean;
    set(domSel: Selection): void;
}
export declare function focusPreventScroll(dom: HTMLElement): any;
//# sourceMappingURL=dom.d.ts.map