{"version":3,"file":"index.js","sources":["../src/theme.js","../src/snippet.js","../src/index.js"],"sourcesContent":["import { EditorView } from \"@codemirror/next/view\";\nexport const baseTheme = EditorView.baseTheme({\n    \"tooltip.autocomplete\": {\n        fontFamily: \"monospace\",\n        overflowY: \"auto\",\n        maxHeight: \"10em\",\n        listStyle: \"none\",\n        margin: 0,\n        padding: 0,\n        \"& > li\": {\n            cursor: \"pointer\",\n            padding: \"1px 1em 1px 3px\",\n            lineHeight: 1.2\n        },\n        \"& > li[aria-selected]\": {\n            background_fallback: \"#bdf\",\n            backgroundColor: \"Highlight\",\n            color_fallback: \"white\",\n            color: \"HighlightText\"\n        }\n    },\n    \"snippetField@light\": { backgroundColor: \"#ddd\" },\n    \"snippetField@dark\": { backgroundColor: \"#333\" },\n    \"snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    }\n});\n","import { Decoration, themeClass, WidgetType, EditorView, keymap } from \"@codemirror/next/view\";\nimport { StateField, StateEffect, EditorState, EditorSelection, Text, precedence } from \"@codemirror/next/state\";\nimport { baseTheme } from \"./theme\";\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.slice(0, Math.min(100, lineObj.length)))[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(EditorState.indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3], found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (name ? fields[i].name == name : seq != null && fields[i].seq == seq)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name: name || null });\n                    found = i;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nclass FieldMarker extends WidgetType {\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.className = themeClass(\"snippetFieldPosition\");\n        return span;\n    }\n}\nlet fieldMarker = Decoration.widget({ widget: new FieldMarker(null) });\nlet fieldRange = Decoration.mark({ class: themeClass(\"snippetField\") });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = StateEffect.define();\nconst snippetState = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: [EditorView.decorations.from(val => val ? val.deco : Decoration.none)]\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/// Convert a snippet template to a function that can apply it.\n/// Snippets are written using syntax like this:\n///\n///     \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n///\n/// Each `${}` placeholder (you may also use `#{}`) indicates a field\n/// that the user can fill in. Its name, if any, will be the default\n/// content for the field.\n///\n/// When the snippet is activated by calling the returned function,\n/// the code is inserted at the given position. Newlines in the\n/// template are indented by the indentation of the start line, plus\n/// one [indent unit](#state.EditorState^indentUnit) per tab character\n/// after the newline.\n///\n/// On activation, (all instances of) the first field are selected.\n/// The user can move between fields with Tab and Shift-Tab as long as\n/// the fields are active. Moving to the last field or moving the\n/// cursor out of the current field deactivates the fields.\n///\n/// The order of fields defaults to textual order, but you can add\n/// numbers to placeholders (`${1}` or `${1:defaultText}`) to provide\n/// a custom order.\nexport function snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, range) => {\n        let { text, ranges } = snippet.instantiate(editor.state, range.from);\n        let spec = { changes: { from: range.from, to: range.to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            spec.effects = setActive.of(new ActiveSnippet(ranges, 0));\n            if (editor.state.field(snippetState, false) === undefined)\n                spec.reconfigure = { append: [snippetState, snippetKeymap, baseTheme] };\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\nconst snippetKeymap = precedence(keymap([\n    { key: \"Tab\", run: moveField(1), shift: moveField(-1) },\n    { key: \"Escape\", run: clearSnippet }\n]), \"override\");\n/// Create a completion source from an array of snippet specs.\nexport function completeSnippets(snippets) {\n    let parsed = snippets.map(s => ({ label: s.name || s.keyword, apply: snippet(s.snippet) }));\n    return (context) => {\n        let token = context.tokenBefore();\n        let isAlpha = /[\\w\\u00a1-\\uffff]/.test(token.text);\n        if (!isAlpha && !context.explicit)\n            return null;\n        let options = [];\n        for (let i = 0; i < snippets.length; i++) {\n            let candidate = snippets[i];\n            if (!token.text || context.filter(candidate.keyword, token.text))\n                options.push(parsed[i]);\n        }\n        return { from: token.from, to: context.pos, options, filterDownOn: /^[\\w\\u00a1-\\uffff]+$/ };\n    };\n}\n","import { ViewPlugin, EditorView, logException } from \"@codemirror/next/view\";\nimport { combineConfig, Transaction, StateField, StateEffect, Facet, precedence } from \"@codemirror/next/state\";\nimport { tooltips, showTooltip } from \"@codemirror/next/tooltip\";\nimport { keymap } from \"@codemirror/next/view\";\nimport { baseTheme } from \"./theme\";\n/// Denotes how to\n/// [filter](#autocomplete.autocomplete^config.filterType)\n/// completions.\nexport var FilterType;\n(function (FilterType) {\n    /// Only show completions that start with the currently typed text.\n    FilterType[FilterType[\"Start\"] = 0] = \"Start\";\n    /// Show completions that have the typed text anywhere in their\n    /// content.\n    FilterType[FilterType[\"Include\"] = 1] = \"Include\";\n    /// Show completions that include each character of the typed text,\n    /// in order (so `gBCR` could complete to `getBoundingClientRect`).\n    FilterType[FilterType[\"Fuzzy\"] = 2] = \"Fuzzy\";\n})(FilterType || (FilterType = {}));\nexport class AutocompleteContext {\n    /// @internal\n    constructor(\n    /// The editor state that the completion happens in.\n    state, \n    /// The position at which the completion happens.\n    pos, \n    /// Indicates whether completion was activated explicitly, or\n    /// implicitly by typing. The usual way to respond to this is to\n    /// only return completions when either there is part of a\n    /// completable entity at the cursor, or explicit is true.\n    explicit, \n    /// The configured completion filter. Ignoring this won't break\n    /// anything, but supporting it is encouraged.\n    filterType, \n    /// Indicates whether completion has been configured to be\n    /// case-sensitive. Again, this should be taken as a hint, not a\n    /// requirement.\n    caseSensitive) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        this.filterType = filterType;\n        this.caseSensitive = caseSensitive;\n    }\n    /// Filter a given completion string against the partial input in\n    /// `text`. Will use `this.filterType`, returns `true` when the\n    /// completion should be shown.\n    filter(completion, text, caseSensitive = this.caseSensitive) {\n        if (!caseSensitive) {\n            completion = completion.toLowerCase();\n            text = text.toLowerCase();\n        }\n        if (this.filterType == FilterType.Start)\n            return completion.slice(0, text.length) == text;\n        else if (this.filterType == FilterType.Include)\n            return completion.indexOf(text) > -1;\n        // Fuzzy\n        for (let i = 0, j = 0; i < text.length; i++) {\n            let found = completion.indexOf(text[i], j);\n            if (found < 0)\n                return false;\n            j = found + 1;\n        }\n        return true;\n    }\n    /// Get the extent, content, and (if there is a token) type of the\n    /// token before `this.pos`.\n    tokenBefore() {\n        let from = this.pos, type = null, text = \"\";\n        let token = this.state.tree.resolve(this.pos, -1);\n        if (!token.firstChild && token.start < this.pos) {\n            from = token.start;\n            type = token.type;\n            text = this.state.sliceDoc(from, this.pos);\n        }\n        return { from, to: this.pos, text, type };\n    }\n}\nfunction canRefilter(result, state, changes) {\n    if (!result.filterDownOn)\n        return false;\n    let to = changes ? changes.mapPos(result.to) : result.to, pos = state.selection.primary.head;\n    if (pos < to || pos > to + 20)\n        return false;\n    return pos == to || result.filterDownOn.test(state.sliceDoc(to, pos));\n}\nfunction refilter(result, context) {\n    let text = context.state.sliceDoc(result.from, context.pos);\n    return {\n        from: result.from,\n        to: context.pos,\n        options: result.options.filter(opt => context.filter(opt.label, text)),\n        filterDownOn: result.filterDownOn\n    };\n}\nclass CombinedResult {\n    constructor(sources, results, options) {\n        this.sources = sources;\n        this.results = results;\n        this.options = options;\n    }\n    static create(sources, results) {\n        let options = [];\n        for (let i = 0, result; i < results.length; i++)\n            if (result = results[i]) {\n                for (let option of result.options)\n                    options.push({ completion: option, source: i });\n            }\n        return new CombinedResult(sources, results, options.sort(({ completion: { label: a } }, { completion: { label: b } }) => a < b ? -1 : a == b ? 0 : 1));\n    }\n    get from() { return this.results.reduce((m, r) => r ? Math.min(m, r.from) : m, 1e9); }\n    get to() { return this.results.reduce((m, r) => r ? Math.max(m, r.to) : m, 0); }\n    map(changes) {\n        return new CombinedResult(this.sources, this.results.map(r => r && Object.assign(Object.assign({}, r), { from: changes.mapPos(r.from), to: changes.mapPos(r.to) })), this.options);\n    }\n    refilterAll(state) {\n        let config = state.facet(autocompleteConfig), pos = state.selection.primary.head;\n        let context = new AutocompleteContext(state, pos, false, config.filterType, config.caseSensitive);\n        return CombinedResult.create(this.sources, this.results.map(r => r && refilter(r, context)));\n    }\n}\nfunction retrieveCompletions(state, pending) {\n    let config = state.facet(autocompleteConfig), pos = state.selection.primary.head;\n    let sources = config.override ? [config.override] : state.languageDataAt(\"autocomplete\", pos);\n    let context = new AutocompleteContext(state, pos, pending.explicit, config.filterType, config.caseSensitive);\n    return Promise.all(sources.map(source => {\n        let prevIndex = pending.prev ? pending.prev.result.sources.indexOf(source) : -1;\n        let prev = prevIndex < 0 ? null : pending.prev.result.results[prevIndex];\n        return (prev && canRefilter(prev, state) && refilter(prev, context)) || source(context);\n    })).then(results => CombinedResult.create(sources, results));\n}\nconst autocompleteConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            filterType: FilterType.Start,\n            caseSensitive: false\n        });\n    }\n});\n/// Returns an extension that enables autocompletion.\nexport function autocomplete(config = {}) {\n    return [\n        activeCompletion,\n        autocompleteConfig.of(config),\n        autocompletePlugin,\n        baseTheme,\n        tooltips(),\n        precedence(keymap([\n            { key: \"ArrowDown\", run: moveCompletion(\"down\") },\n            { key: \"ArrowUp\", run: moveCompletion(\"up\") },\n            { key: \"PageDown\", run: moveCompletion(\"down\", \"page\") },\n            { key: \"PageUp\", run: moveCompletion(\"up\", \"page\") },\n            { key: \"Enter\", run: acceptCompletion }\n        ]), \"override\")\n    ];\n}\nfunction moveCompletion(dir, by) {\n    return (view) => {\n        let active = view.state.field(activeCompletion);\n        if (!(active instanceof ActiveCompletion) || Date.now() - active.timeStamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = active.selected + step * (dir == \"up\" ? -1 : 1), { length } = active.result.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: selectCompletion.of(selected) });\n        return true;\n    };\n}\nconst CompletionInteractMargin = 75;\nfunction acceptCompletion(view) {\n    let active = view.state.field(activeCompletion);\n    if (!(active instanceof ActiveCompletion) || Date.now() - active.timeStamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, active.result, active.selected);\n    return true;\n}\n/// Explicitly start autocompletion.\nexport const startCompletion = (view) => {\n    let active = view.state.field(activeCompletion, false);\n    if (active === undefined)\n        return false;\n    if (active instanceof ActiveCompletion || (active instanceof PendingCompletion && active.explicit))\n        return false;\n    view.dispatch({ effects: toggleCompletion.of(true) });\n    return true;\n};\nfunction applyCompletion(view, combined, index) {\n    let option = combined.options[index];\n    let apply = option.completion.apply || option.completion.label;\n    let result = combined.results[option.source];\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length }\n        });\n    }\n    else {\n        apply(view, result, option.completion);\n    }\n}\n/// Close the currently active completion.\nexport const closeCompletion = (view) => {\n    let active = view.state.field(activeCompletion, false);\n    if (active == null)\n        return false;\n    view.dispatch({ effects: toggleCompletion.of(false) });\n    return true;\n};\n/// Basic keybindings for autocompletion.\n///\n///  - Ctrl-Space (Cmd-Space on macOS): [`startCompletion`](#autocomplete.startCompletion)\n///  - Escape: [`closeCompletion`](#autocomplete.closeCompletion)\nexport const autocompleteKeymap = [\n    { key: \"Mod-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion }\n];\nconst openCompletion = StateEffect.define();\nconst toggleCompletion = StateEffect.define();\nconst selectCompletion = StateEffect.define();\nfunction touchesCompletion(tr, completion) {\n    return completion instanceof ActiveCompletion ? tr.changes.touchesRange(completion.result.from, completion.result.to)\n        : tr.changes.touchesRange(tr.state.selection.primary.head);\n}\nconst activeCompletion = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        let event = tr.annotation(Transaction.userEvent);\n        if (event == \"input\" && value instanceof ActiveCompletion &&\n            value.result.results.every(r => !r || canRefilter(r, tr.state, tr.changes))) {\n            value = new ActiveCompletion(value.result.map(tr.changes).refilterAll(tr.state), 0, value.timeStamp);\n        }\n        else if (event == \"input\" && (value || tr.state.facet(autocompleteConfig).activateOnTyping) ||\n            event == \"delete\" && value) {\n            let prev = value instanceof ActiveCompletion ? value : value instanceof PendingCompletion ? value.prev : null;\n            value = new PendingCompletion(prev, value instanceof PendingCompletion ? value.explicit : false);\n        }\n        else if (value && (tr.selection || tr.docChanged && touchesCompletion(tr, value))) {\n            // Clear on selection changes or changes that touch the completion\n            value = null;\n        }\n        else if (tr.docChanged && value instanceof ActiveCompletion) {\n            value = new ActiveCompletion(value.result.map(tr.changes), value.selected, value.timeStamp);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(openCompletion))\n                value = new ActiveCompletion(effect.value, 0);\n            else if (effect.is(toggleCompletion))\n                value = effect.value ? new PendingCompletion(null, true) : null;\n            else if (effect.is(selectCompletion) && value instanceof ActiveCompletion)\n                value = new ActiveCompletion(value.result, effect.value, value.timeStamp, value.id, value.tooltip);\n        }\n        return value;\n    },\n    provide: [\n        showTooltip.nFrom(active => active instanceof ActiveCompletion ? active.tooltip : none),\n        EditorView.contentAttributes.from(active => active instanceof ActiveCompletion ? active.attrs : baseAttrs)\n    ]\n});\nconst baseAttrs = { \"aria-autocomplete\": \"list\" }, none = [];\nclass ActiveCompletion {\n    constructor(result, selected, timeStamp = Date.now(), id = \"cm-ac-\" + Math.floor(Math.random() * 1679616).toString(36), tooltip = [{\n            pos: result.from,\n            style: \"autocomplete\",\n            create: completionTooltip(result, id)\n        }]) {\n        this.result = result;\n        this.selected = selected;\n        this.timeStamp = timeStamp;\n        this.id = id;\n        this.tooltip = tooltip;\n        this.attrs = {\n            \"aria-autocomplete\": \"list\",\n            \"aria-activedescendant\": this.id + \"-\" + this.selected,\n            \"aria-owns\": this.id\n        };\n    }\n}\nclass PendingCompletion {\n    constructor(prev, explicit) {\n        this.prev = prev;\n        this.explicit = explicit;\n    }\n}\nfunction createListBox(result, id) {\n    const ul = document.createElement(\"ul\");\n    ul.id = id;\n    ul.setAttribute(\"role\", \"listbox\");\n    ul.setAttribute(\"aria-expanded\", \"true\");\n    for (let i = 0; i < result.options.length; i++) {\n        const li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        li.innerText = result.options[i].completion.label;\n        li.setAttribute(\"role\", \"option\");\n    }\n    return ul;\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(result, id) {\n    return (view) => {\n        let list = createListBox(result, id);\n        list.addEventListener(\"click\", (e) => {\n            let index = 0, dom = e.target;\n            for (;;) {\n                dom = dom.previousSibling;\n                if (!dom)\n                    break;\n                index++;\n            }\n            if (index < result.options.length)\n                applyCompletion(view, result, index);\n        });\n        function updateSel(view) {\n            let cur = view.state.field(activeCompletion);\n            if (cur instanceof ActiveCompletion)\n                updateSelectedOption(list, cur.selected);\n        }\n        return {\n            dom: list,\n            mount: updateSel,\n            update(update) {\n                if (update.state.field(activeCompletion) != update.prevState.field(activeCompletion))\n                    updateSel(update.view);\n            }\n        };\n    };\n}\nfunction updateSelectedOption(list, selected) {\n    let set = null;\n    for (let opt = list.firstChild, i = 0; opt; opt = opt.nextSibling, i++) {\n        if (i == selected) {\n            if (!opt.hasAttribute(\"aria-selected\")) {\n                opt.setAttribute(\"aria-selected\", \"true\");\n                set = opt;\n            }\n        }\n        else {\n            if (opt.hasAttribute(\"aria-selected\"))\n                opt.removeAttribute(\"aria-selected\");\n        }\n    }\n    if (set)\n        scrollIntoView(list, set);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\nconst DebounceTime = 100;\nconst autocompletePlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.stateVersion = 0;\n        this.debounce = -1;\n    }\n    update(update) {\n        if (!update.docChanged && !update.selectionSet &&\n            update.prevState.field(activeCompletion) == update.state.field(activeCompletion))\n            return;\n        if (update.docChanged || update.selectionSet)\n            this.stateVersion++;\n        if (this.debounce > -1)\n            clearTimeout(this.debounce);\n        const active = update.state.field(activeCompletion);\n        this.debounce = active instanceof PendingCompletion\n            ? setTimeout(() => this.startUpdate(active), DebounceTime) : -1;\n    }\n    startUpdate(pending) {\n        this.debounce = -1;\n        let { view, stateVersion } = this;\n        retrieveCompletions(view.state, pending).then(result => {\n            if (this.stateVersion != stateVersion || result.options.length == 0)\n                return;\n            view.dispatch({ effects: openCompletion.of(result) });\n        }).catch(e => logException(view.state, e));\n    }\n});\n/// Given a a fixed array of options, return an autocompleter that\n/// compares those options to the current\n/// [token](#autocomplete.AutocompleteContext.tokenBefore) and returns\n/// the matching ones.\nexport function completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let filterDownOn = options.every(o => /^\\w+$/.test(o.label)) ? /^\\w+$/ : undefined;\n    return (context) => {\n        let token = context.tokenBefore();\n        return { from: token.from, to: token.to,\n            options: options.filter(o => context.filter(o.label, token.text)),\n            filterDownOn };\n    };\n}\nexport { snippet, completeSnippets } from \"./snippet\";\n"],"names":[],"mappings":"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"}