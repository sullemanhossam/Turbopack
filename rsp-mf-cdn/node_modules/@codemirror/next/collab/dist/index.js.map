{"version":3,"file":"index.js","sources":["../src/collab.js"],"sourcesContent":["import { Facet, ChangeSet, StateField, Annotation, StateEffect, Transaction, combineConfig } from \"@codemirror/next/state\";\nclass LocalUpdate {\n    constructor(origin, changes, effects) {\n        this.origin = origin;\n        this.changes = changes;\n        this.effects = effects;\n    }\n}\n// This state field accumulates updates that have to be sent to the\n// central authority in the collaborating group and makes it possible\n// to integrate updates made by peers into our local document. It is\n// defined by the plugin, and will be available as the `collab` field\n// in the resulting editor state.\nclass CollabState {\n    constructor(\n    // The version number of the last update received from the central\n    // authority. Starts at 0 or the value of the `version` property\n    // in the option object, for the editor's value when the option\n    // was enabled.\n    version, \n    // The local updates that havent been successfully sent to the\n    // server yet.\n    unconfirmed) {\n        this.version = version;\n        this.unconfirmed = unconfirmed;\n    }\n}\nconst collabConfig = Facet.define({\n    combine(configs) {\n        let combined = combineConfig(configs, { startVersion: 0, clientID: \"\", sharedEffects: null });\n        return { startVersion: combined.startVersion,\n            clientID: combined.clientID || (configs.length && configs[0].generatedID) || \"\",\n            sharedEffects: combined.sharedEffects };\n    }\n});\nconst collabReceive = Annotation.define();\nconst collabField = StateField.define({\n    create(state) {\n        return new CollabState(state.facet(collabConfig).startVersion, []);\n    },\n    update(collab, tr) {\n        let isSync = tr.annotation(collabReceive);\n        if (isSync)\n            return isSync;\n        let { sharedEffects } = tr.startState.facet(collabConfig);\n        let update = new LocalUpdate(tr, tr.changes, sharedEffects ? sharedEffects(tr) : []);\n        if (update.effects.length || !update.changes.empty)\n            return new CollabState(collab.version, collab.unconfirmed.concat(update));\n        return collab;\n    }\n});\n/// Create an instance of the collaborative editing plugin.\nexport function collab(config = {}) {\n    return [\n        collabField,\n        collabConfig.of({ startVersion: config.startVersion,\n            clientID: config.clientID,\n            sharedEffects: config.sharedEffects,\n            generatedID: Math.floor(Math.random() * 0xFFFFFFFF).toString(16) })\n    ];\n}\n/// Create a transaction that represents a set of new updates received\n/// from the authority. Applying this transaction moves the state\n/// forward to adjust to the authority's view of the document.\nexport function receiveUpdates(state, updates, ownUpdateCount) {\n    // Pushes a set of updates (received from the central authority)\n    // into the editor state (which should have the collab plugin\n    // enabled). Will recognize its own updates, and confirm unconfirmed\n    // updates as appropriate. Remaining unconfirmed updates will be\n    // rebased over remote changes.\n    let collabState = state.field(collabField);\n    let version = collabState.version + updates.length;\n    let unconfirmed = collabState.unconfirmed.slice(ownUpdateCount);\n    if (ownUpdateCount)\n        updates = updates.slice(ownUpdateCount);\n    // If all updates originated with us, we're done.\n    if (!updates.length)\n        return state.update({ annotations: [collabReceive.of(new CollabState(version, unconfirmed))] });\n    let changes = updates[0].changes, effects = updates[0].effects || [];\n    for (let i = 1; i < updates.length; i++) {\n        let update = updates[i];\n        effects = StateEffect.mapEffects(effects, update.changes);\n        if (update.effects)\n            effects = effects.concat(update.effects);\n        changes = changes.compose(update.changes);\n    }\n    if (unconfirmed.length) {\n        let newUnconfirmed = [];\n        for (let update of unconfirmed) {\n            let updateChanges = update.changes.map(changes);\n            changes = changes.map(update.changes, true);\n            newUnconfirmed.push(new LocalUpdate(update.origin, updateChanges, StateEffect.mapEffects(update.effects, changes)));\n        }\n        unconfirmed = newUnconfirmed;\n        effects = StateEffect.mapEffects(effects, unconfirmed.reduce((ch, u) => ch.compose(u.changes), ChangeSet.empty(unconfirmed[0].changes.length)));\n    }\n    return state.update({\n        changes,\n        effects,\n        annotations: [\n            Transaction.addToHistory.of(false),\n            collabReceive.of(new CollabState(version, unconfirmed))\n        ],\n        filter: false\n    });\n}\n/// Returns the set of locally made updates that still have to be sent\n/// to the authority. The returned objects will also have an `origin`\n/// property that points at the transaction that created them. This\n/// may be useful if you want to send along metadata like timestamps.\n/// (But note that the updates may have been mapped in the meantime,\n/// whereas the transaction is just the original transaction that\n/// created them.)\nexport function sendableUpdates(state) {\n    return state.field(collabField).unconfirmed;\n}\n/// Get the version up to which the collab plugin has synced with the\n/// central authority.\nexport function getSyncedVersion(state) {\n    return state.field(collabField).version;\n}\n/// Get this editor's collaborative editing client ID.\nexport function getClientID(state) {\n    return state.facet(collabConfig).clientID;\n}\n"],"names":[],"mappings":";;AACA,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA,IAAI,WAAW,EAAE;AACjB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACvC,KAAK;AACL,CAAC;AACD,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;AAClC,IAAI,OAAO,CAAC,OAAO,EAAE;AACrB,QAAQ,IAAI,QAAQ,GAAG,aAAa,CAAC,OAAO,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AACtG,QAAQ,OAAO,EAAE,YAAY,EAAE,QAAQ,CAAC,YAAY;AACpD,YAAY,QAAQ,EAAE,QAAQ,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE;AAC3F,YAAY,aAAa,EAAE,QAAQ,CAAC,aAAa,EAAE,CAAC;AACpD,KAAK;AACL,CAAC,CAAC,CAAC;AACH,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;AAC1C,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC;AACtC,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC3E,KAAK;AACL,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE;AACvB,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAClD,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,MAAM,CAAC;AAC1B,QAAQ,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE,QAAQ,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,aAAa,GAAG,aAAa,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7F,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;AAC1D,YAAY,OAAO,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACtF,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,CAAC,CAAC,CAAC;AACH;AACO,SAAS,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE;AACpC,IAAI,OAAO;AACX,QAAQ,WAAW;AACnB,QAAQ,YAAY,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,MAAM,CAAC,YAAY;AAC3D,YAAY,QAAQ,EAAE,MAAM,CAAC,QAAQ;AACrC,YAAY,aAAa,EAAE,MAAM,CAAC,aAAa;AAC/C,YAAY,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;AAC/E,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACO,SAAS,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAC/C,IAAI,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;AACvD,IAAI,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AACpE,IAAI,IAAI,cAAc;AACtB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;AACvB,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACxG,IAAI,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;AACzE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AAClE,QAAQ,IAAI,MAAM,CAAC,OAAO;AAC1B,YAAY,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACrD,QAAQ,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAClD,KAAK;AACL,IAAI,IAAI,WAAW,CAAC,MAAM,EAAE;AAC5B,QAAQ,IAAI,cAAc,GAAG,EAAE,CAAC;AAChC,QAAQ,KAAK,IAAI,MAAM,IAAI,WAAW,EAAE;AACxC,YAAY,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC5D,YAAY,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACxD,YAAY,cAAc,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAChI,SAAS;AACT,QAAQ,WAAW,GAAG,cAAc,CAAC;AACrC,QAAQ,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACxJ,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC;AACxB,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,WAAW,EAAE;AACrB,YAAY,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9C,YAAY,aAAa,CAAC,EAAE,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACnE,SAAS;AACT,QAAQ,MAAM,EAAE,KAAK;AACrB,KAAK,CAAC,CAAC;AACP,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,KAAK,EAAE;AACvC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC;AAChD,CAAC;AACD;AACA;AACO,SAAS,gBAAgB,CAAC,KAAK,EAAE;AACxC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;AAC5C,CAAC;AACD;AACO,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC;AAC9C;;;;"}