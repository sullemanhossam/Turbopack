{"version":3,"file":"index.js","sources":["../src/snippets.js","../src/javascript.js","../src/eslint.js"],"sourcesContent":["/// A collection of JavaScript-related\n/// [snippets](#autocomplete.snippet).\nexport const snippets = [\n    { keyword: \"function\",\n        name: \"function definition\",\n        snippet: \"function ${name}(${params}) {\\n\\t${}\\n}\" },\n    { keyword: \"for\",\n        name: \"for loop\",\n        snippet: \"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\" },\n    { keyword: \"for\",\n        name: \"for of loop\",\n        snippet: \"for (let ${name} of ${collection}) {\\n\\t${}\\n}\" },\n    { keyword: \"try\",\n        name: \"try block\",\n        snippet: \"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\" },\n    { keyword: \"class\",\n        name: \"class definition\",\n        snippet: \"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\" },\n    { keyword: \"import\",\n        name: \"import named\",\n        snippet: \"import {${names}} from \\\"${module}\\\"\\n${}\" },\n    { keyword: \"import\",\n        name: \"import default\",\n        snippet: \"import ${name} from \\\"${module}\\\"\\n${}\" }\n];\n","import { parser } from \"lezer-javascript\";\nimport { flatIndent, continuedIndent, indentNodeProp, foldNodeProp, LezerSyntax } from \"@codemirror/next/syntax\";\nimport { styleTags } from \"@codemirror/next/highlight\";\nimport { completeSnippets } from \"@codemirror/next/autocomplete\";\nimport { snippets } from \"./snippets\";\nconst statementIndent = continuedIndent({ except: /^{/ });\n/// A syntax provider based on the [Lezer JavaScript\n/// parser](https://github.com/lezer-parser/javascript), extended with\n/// highlighting and indentation information.\nexport const javascriptSyntax = new LezerSyntax(parser.withProps(indentNodeProp.add(type => {\n    if (type.name == \"IfStatement\")\n        return continuedIndent({ except: /^\\s*({|else\\b)/ });\n    if (type.name == \"TryStatement\")\n        return continuedIndent({ except: /^\\s*({|catch|finally)\\b/ });\n    if (type.name == \"LabeledStatement\")\n        return flatIndent;\n    if (type.name == \"SwitchBody\")\n        return context => {\n            let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n            return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n        };\n    if (type.name == \"TemplateString\" || type.name == \"BlockComment\")\n        return () => -1;\n    if (/(Statement|Declaration)$/.test(type.name) || type.name == \"Property\")\n        return statementIndent;\n    return undefined;\n}), foldNodeProp.add({\n    Block(tree) { return { from: tree.start + 1, to: tree.end - 1 }; },\n    ObjectExpression(tree) { return { from: tree.start + 1, to: tree.end - 1 }; },\n    ArrayExpression(tree) { return { from: tree.start + 1, to: tree.end - 1 }; },\n    BlockComment(tree) { return { from: tree.start + 2, to: tree.end - 2 }; }\n}), styleTags({\n    \"get set async static\": \"modifier\",\n    \"for while do if else switch try catch finally return throw break continue default case\": \"keyword control\",\n    \"in of await yield void typeof delete instanceof\": \"operatorKeyword\",\n    \"export import let var const function class extends\": \"keyword definition\",\n    \"with debugger from as\": \"keyword\",\n    TemplateString: \"string#2\",\n    \"BooleanLiteral Super\": \"atom\",\n    this: \"self\",\n    null: \"null\",\n    Star: \"modifier\",\n    VariableName: \"variableName\",\n    VariableDefinition: \"variableName definition\",\n    Label: \"labelName\",\n    PropertyName: \"propertyName\",\n    PropertyNameDefinition: \"propertyName definition\",\n    \"PostfixOp UpdateOp\": \"updateOperator\",\n    LineComment: \"lineComment\",\n    BlockComment: \"blockComment\",\n    Number: \"number\",\n    String: \"string\",\n    ArithOp: \"arithmeticOperator\",\n    LogicOp: \"logicOperator\",\n    BitOp: \"bitwiseOperator\",\n    CompareOp: \"compareOperator\",\n    RegExp: \"regexp\",\n    Equals: \"operator definition\",\n    Spread: \"punctuation\",\n    \"Arrow :\": \"punctuation definition\",\n    \"( )\": \"paren\",\n    \"[ ]\": \"squareBracket\",\n    \"{ }\": \"brace\",\n    \".\": \"derefOperator\",\n    \", ;\": \"separator\"\n})), {\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } }\n    }\n});\n/// Returns an extension that installs JavaScript support features\n/// (completion of [snippets](#javascript.snippets)).\nexport function javascriptSupport() {\n    return javascriptSyntax.languageData.of({ autocomplete: completeSnippets(snippets) });\n}\n/// Returns an extension that installs the JavaScript syntax and\n/// support features.\nexport function javascript() {\n    return [javascriptSyntax, javascriptSupport()];\n}\n","import { EditorState } from \"@codemirror/next/state\";\nimport { javascriptSyntax } from \"./javascript\";\nimport { LezerSyntax } from \"@codemirror/next/syntax\";\n/// Connects an [ESLint](https://eslint.org/) linter to CodeMirror's\n/// [lint](#lint) integration. `eslint` should be an instance of the\n/// [`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\n/// class, and `config` an optional ESLint configuration. The return\n/// value of this function can be passed to [`linter`](#lint.linter)\n/// to create a JavaScript linting extension.\n///\n/// Note that ESLint targets node, and is tricky to run in the\n/// browser. The [eslint4b](https://github.com/mysticatea/eslint4b)\n/// and\n/// [eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\n/// packages may help with that.\nexport function esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    function range(state, from = 0, to = state.doc.length) {\n        let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n        return eslint.verify(state.sliceDoc(from, to), config)\n            .map((val) => translateDiagnostic(val, state.doc, offset));\n    }\n    return (view) => {\n        let [syntax] = view.state.facet(EditorState.syntax);\n        if (syntax == javascriptSyntax)\n            return range(view.state);\n        if (!syntax || !(syntax instanceof LezerSyntax && syntax.parser.hasNested))\n            return [];\n        let found = [];\n        // FIXME move to async parsing?\n        syntax.getTree(view.state).iterate({\n            enter(type, start, end) {\n                if (type == javascriptSyntax.parser.topType) {\n                    for (let d of range(view.state, start, end))\n                        found.push(d);\n                    return false;\n                }\n                return undefined;\n            }\n        });\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n"],"names":[],"mappings":"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"}