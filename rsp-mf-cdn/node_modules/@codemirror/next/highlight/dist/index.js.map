{"version":3,"file":"index.js","sources":["../src/highlight.js"],"sourcesContent":["import { NodeType, NodeProp } from \"lezer-tree\";\nimport { StyleModule } from \"style-mod\";\nimport { EditorView, ViewPlugin, Decoration } from \"@codemirror/next/view\";\nimport { EditorState } from \"@codemirror/next/state\";\nimport { RangeSetBuilder } from \"@codemirror/next/rangeset\";\nconst Inherit = 1;\n/// A tag system defines a set of node (token) tags used for\n/// highlighting. You'll usually want to use the\n/// [default](#highlight.defaultTags) set, but it is possible to\n/// define your own custom system when that doesn't fit your use case.\nexport class TagSystem {\n    /// Define a tag system. Each tag identifies a type of syntactic\n    /// element, which can have a single type and any number of flags.\n    /// The `flags` argument should be an array of flag names, and the\n    /// `types` argument an array of type names. Type names may have a\n    /// `\"name=parentName\"` format to specify that this type is an\n    /// instance of some other type, which means that, if no styling for\n    /// the type itself is provided, it'll fall back to the parent\n    /// type's styling.\n    ///\n    /// You can specify a `subtypes` property to assign a given number\n    /// of sub-types to each type. These are automatically generated\n    /// types with the base type name suffixed with `#1` to `#`_`N`_\n    /// (where _N_ is the number given in the `subtypes` field) that\n    /// have the base type as parent type.\n    constructor(options) {\n        /// @internal\n        this.typeNames = [\"\"];\n        /// @internal\n        this.typeIDs = Object.create(null);\n        /// A [node\n        /// prop](https://lezer.codemirror.net/docs/ref#tree.NodeProp) used\n        /// to associate styling tag information with syntax tree nodes.\n        this.prop = new NodeProp();\n        this.flags = options.flags;\n        this.types = options.types;\n        this.flagMask = Math.pow(2, this.flags.length) - 1;\n        this.typeShift = this.flags.length;\n        let subtypes = options.subtypes || 0;\n        let parentNames = [undefined];\n        this.typeIDs[\"\"] = 0;\n        let typeID = 1;\n        for (let type of options.types) {\n            let match = /^([\\w\\-]+)(?:=([\\w-]+))?$/.exec(type);\n            if (!match)\n                throw new RangeError(\"Invalid type name \" + type);\n            let id = typeID++;\n            this.typeNames[id] = match[1];\n            this.typeIDs[match[1]] = id;\n            parentNames[id] = match[2];\n            for (let i = 0; i < subtypes; i++) {\n                let subID = typeID++, name = match[1] + \"#\" + (i + 1);\n                this.typeNames[subID] = name;\n                this.typeIDs[name] = subID;\n                parentNames[subID] = match[1];\n            }\n        }\n        this.parents = parentNames.map(name => {\n            if (name == null)\n                return 0;\n            let id = this.typeIDs[name];\n            if (id == null)\n                throw new RangeError(`Unknown parent type '${name}' specified`);\n            return id;\n        });\n        if (this.flags.length > 29 || this.typeNames.length > Math.pow(2, 29 - this.flags.length))\n            throw new RangeError(\"Too many style tag flags to fit in a 30-bit integer\");\n    }\n    /// Parse a tag name into a numeric ID. Only necessary if you are\n    /// manually defining [node properties](#highlight.TagSystem.prop)\n    /// for this system.\n    get(name) {\n        let value = name.charCodeAt(0) == 43 ? 1 : 0; // Check for leading '+'\n        for (let part of (value ? name.slice(1) : name).split(\" \"))\n            if (part) {\n                let flag = this.flags.indexOf(part);\n                if (flag > -1) {\n                    value += 1 << flag;\n                }\n                else {\n                    let typeID = this.typeIDs[part];\n                    if (typeID == null)\n                        throw new RangeError(`Unknown tag type '${part}'`);\n                    if (value >> this.typeShift)\n                        throw new RangeError(`Multiple tag types specified in '${name}'`);\n                    value += typeID << this.typeShift;\n                }\n            }\n        return value;\n    }\n    /// Create a\n    /// [`PropSource`](https://lezer.codemirror.net/docs/ref#tree.PropSource)\n    /// that adds node properties for this system. `tags` should map\n    /// node type\n    /// [selectors](https://lezer.codemirror.net/docs/ref#tree.NodeType^match)\n    /// to tag names.\n    add(tags) {\n        let match = NodeType.match(tags);\n        return this.prop.add((type) => {\n            let found = match(type);\n            return found == null ? undefined : this.get(found);\n        });\n    }\n    /// Create a highlighter extension for this system, styling the\n    /// given tags using the given CSS objects.\n    highlighter(spec) {\n        let styling = new Styling(this, spec);\n        return [\n            ViewPlugin.define(view => new Highlighter(view, this.prop, styling)).decorations(),\n            EditorView.styleModule.of(styling.module)\n        ];\n    }\n    /// @internal\n    specificity(tag) {\n        let flags = tag & this.flagMask, spec = 0;\n        for (let i = 1; i <= this.flags.length; i++)\n            if (flags & (1 << i))\n                spec++;\n        for (let type = tag >> (this.flags.length + 1); type; type = this.parents[type])\n            spec += 1000;\n        return spec;\n    }\n}\n/// The set of highlighting tags used by regular language packages and\n/// themes.\nexport const defaultTags = new TagSystem({\n    flags: [\"invalid\", \"meta\", \"standard\",\n        \"definition\", \"constant\", \"local\", \"control\",\n        \"link\", \"strong\", \"emphasis\", \"monospace\",\n        \"changed\", \"inserted\", \"deleted\"],\n    subtypes: 7,\n    types: [\n        \"comment\",\n        \"lineComment=comment\",\n        \"blockComment=comment\",\n        \"docComment=comment\",\n        \"name\",\n        \"variableName=name\",\n        \"typeName=name\",\n        \"propertyName=name\",\n        \"className=name\",\n        \"labelName=name\",\n        \"namespace=name\",\n        \"literal\",\n        \"string=literal\",\n        \"docString=string\",\n        \"character=string\",\n        \"number=literal\",\n        \"integer=number\",\n        \"float=number\",\n        \"regexp=literal\",\n        \"escape=literal\",\n        \"color=literal\",\n        \"content\",\n        \"heading=content\",\n        \"list=content\",\n        \"quote=content\",\n        \"keyword\",\n        \"self=keyword\",\n        \"null=keyword\",\n        \"atom=keyword\",\n        \"unit=keyword\",\n        \"modifier=keyword\",\n        \"operatorKeyword=keyword\",\n        \"operator\",\n        \"derefOperator=operator\",\n        \"arithmeticOperator=operator\",\n        \"logicOperator=operator\",\n        \"bitwiseOperator=operator\",\n        \"compareOperator=operator\",\n        \"updateOperator=operator\",\n        \"typeOperator=operator\",\n        \"punctuation\",\n        \"separator=punctuation\",\n        \"bracket=punctuation\",\n        \"angleBracket=bracket\",\n        \"squareBracket=bracket\",\n        \"paren=bracket\",\n        \"brace=bracket\"\n    ]\n});\n/// Used to add a set of tags to a language syntax via\n/// [`Parser.withProps`](https://lezer.codemirror.net/docs/ref#lezer.Parser.withProps).\n/// The argument object can use syntax node selectors (see\n/// [`NodeType.match`](https://lezer.codemirror.net/docs/ref#tree.NodeType^match))\n/// as property names, and tag names (in the [default tag\n/// system](#highlight.defaultTags)) as values.\nexport const styleTags = (tags) => defaultTags.add(tags);\n/// Create a highlighter theme that adds the given styles to the given\n/// tags. The spec's property names must be [tag\n/// names](#highlight.defaultTags) or comma-separated lists of tag\n/// names. The values should be\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\nexport const highlighter = (spec) => defaultTags.highlighter(spec);\nclass StyleRule {\n    constructor(type, flags, specificity, cls) {\n        this.type = type;\n        this.flags = flags;\n        this.specificity = specificity;\n        this.cls = cls;\n    }\n}\nclass Styling {\n    constructor(tags, spec) {\n        this.tags = tags;\n        this.cache = Object.create(null);\n        let modSpec = Object.create(null);\n        let nextCls = 0;\n        let rules = [];\n        for (let prop in spec) {\n            let cls = \"c\" + nextCls++;\n            modSpec[cls] = spec[prop];\n            for (let part of prop.split(/\\s*,\\s*/)) {\n                let tag = tags.get(part);\n                rules.push(new StyleRule(tag >> tags.typeShift, tag & tags.flagMask, tags.specificity(tag), cls));\n            }\n        }\n        this.rules = rules.sort((a, b) => b.specificity - a.specificity);\n        this.module = new StyleModule(modSpec);\n    }\n    match(tag) {\n        let known = this.cache[tag];\n        if (known != null)\n            return known;\n        let result = \"\";\n        let type = tag >> this.tags.typeShift, flags = tag & this.tags.flagMask;\n        for (;;) {\n            for (let rule of this.rules) {\n                if (rule.type == type && (rule.flags & flags) == rule.flags) {\n                    if (result)\n                        result += \" \";\n                    result += this.module[rule.cls];\n                    flags &= ~rule.flags;\n                    if (type)\n                        break;\n                }\n            }\n            if (type)\n                type = this.tags.parents[type];\n            else\n                break;\n        }\n        return this.cache[tag] = result;\n    }\n}\nclass Highlighter {\n    constructor(view, prop, styling) {\n        this.prop = prop;\n        this.styling = styling;\n        this.tree = view.state.tree;\n        this.decorations = this.buildDeco(view.visibleRanges, this.tree);\n    }\n    update(update) {\n        let syntax = update.state.facet(EditorState.syntax);\n        if (!syntax.length) {\n            this.decorations = Decoration.none;\n        }\n        else if (syntax[0].parsePos(update.state) < update.view.viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (this.tree != syntax[0].getTree(update.state) || update.viewportChanged) {\n            this.tree = syntax[0].getTree(update.state);\n            this.decorations = this.buildDeco(update.view.visibleRanges, this.tree);\n        }\n    }\n    buildDeco(ranges, tree) {\n        let builder = new RangeSetBuilder();\n        let start = 0;\n        function flush(pos, style) {\n            if (pos > start && style)\n                builder.add(start, pos, Decoration.mark({ class: style })); // FIXME cache these\n            start = pos;\n        }\n        for (let { from, to } of ranges) {\n            start = from;\n            // The current node's own classes\n            let curClass = \"\";\n            let context = [];\n            let inherited = [];\n            tree.iterate({\n                from, to,\n                enter: (type, start) => {\n                    let inheritedClass = inherited.length ? inherited[inherited.length - 1] : \"\";\n                    let cls = inheritedClass;\n                    let style = type.prop(this.prop);\n                    if (style != null) {\n                        let val = this.styling.match(style);\n                        if (val) {\n                            if (cls)\n                                cls += \" \";\n                            cls += val;\n                        }\n                        if (style & Inherit)\n                            inheritedClass = cls;\n                    }\n                    context.push(cls);\n                    if (inheritedClass)\n                        inherited.push(inheritedClass);\n                    if (cls != curClass) {\n                        flush(start, curClass);\n                        curClass = cls;\n                    }\n                },\n                leave: (_t, _s, end) => {\n                    context.pop();\n                    inherited.pop();\n                    let backTo = context.length ? context[context.length - 1] : \"\";\n                    if (backTo != curClass) {\n                        flush(Math.min(to, end), curClass);\n                        curClass = backTo;\n                    }\n                }\n            });\n        }\n        return builder.finish();\n    }\n}\n/// A default highlighter (works well with light themes).\nexport const defaultHighlighter = highlighter({\n    deleted: { textDecoration: \"line-through\" },\n    inserted: { textDecoration: \"underline\" },\n    link: { textDecoration: \"underline\" },\n    strong: { fontWeight: \"bold\" },\n    emphasis: { fontStyle: \"italic\" },\n    invalid: { color: \"#f00\" },\n    keyword: { color: \"#708\" },\n    atom: { color: \"#219\" },\n    number: { color: \"#164\" },\n    string: { color: \"#a11\" },\n    \"regexp, escape\": { color: \"#e40\" },\n    \"variableName definition\": { color: \"#00f\" },\n    typeName: { color: \"#085\" },\n    className: { color: \"#167\" },\n    \"propertyName definition\": { color: \"#00c\" },\n    comment: { color: \"#940\" },\n    meta: { color: \"#555\" },\n});\n"],"names":[],"mappings":"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"}