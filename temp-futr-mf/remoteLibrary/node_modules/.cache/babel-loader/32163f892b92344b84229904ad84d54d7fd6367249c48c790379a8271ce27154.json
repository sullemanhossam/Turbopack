{"ast":null,"code":"function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Secondary } from \"../storybook/Button.stories\";\nimport clsx from \"clsx\";\nimport TailwindWrapper from \"../../tailwind.wrapper\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  primary,\n  backgroundColor,\n  size,\n  label,\n  ...props\n}) => {\n  // const mode = primary ? \"storybook-button--primary\" : \"storybook-button--secondary\";\n  const getButtonSize = size => {\n    switch (size) {\n      // shorthands are added to speed up stuff\n      case \"small\" || \"md\":\n        return \"size-sm\";\n      case \"large || lg\":\n        return \"size-lg\";\n      default:\n        return \"size-md\";\n    }\n  };\n  const base = \"rounded-md bg-black px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\";\n  const styles = clsx({\n    \"bg-white\": primary\n  }, getButtonSize, base);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    className: base\n  }, props), label), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\"\n    }\n  }, \"hello\"));\n};\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: \"medium\",\n  onClick: undefined\n};\nexport default (props => {\n  return /*#__PURE__*/React.createElement(TailwindWrapper, null, /*#__PURE__*/React.createElement(Button, props));\n});\n// exporting default will add tailwind otherwise it will not be specified within the app and up to the client","map":{"version":3,"names":["React","PropTypes","Secondary","clsx","TailwindWrapper","Button","primary","backgroundColor","size","label","props","getButtonSize","base","styles","createElement","Fragment","_extends","type","className","style","color","propTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"sources":["/Users/sullemanhossam/Desktop/Turbopack/temp-futr-mf/remoteLibrary/src/components/button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Secondary } from \"../storybook/Button.stories\";\nimport clsx from \"clsx\";\nimport TailwindWrapper from \"../../tailwind.wrapper\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  // const mode = primary ? \"storybook-button--primary\" : \"storybook-button--secondary\";\n  const getButtonSize = (size) => {\n    switch (size) {\n      // shorthands are added to speed up stuff\n      case \"small\" || \"md\":\n        return \"size-sm\";\n      case \"large || lg\":\n        return \"size-lg\";\n      default:\n        return \"size-md\";\n    }\n  };\n\n  const base = \"rounded-md bg-black px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\";\n  const styles = clsx({ \"bg-white\": primary }, getButtonSize, base);\n  return (\n    <>\n      <button type=\"button\" className={base} {...props}>\n        {label}\n      </button>\n      <p style={{ color: \"green\" }}>hello</p>\n    </>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: \"medium\",\n  onClick: undefined,\n};\n\nexport default (props) => {\n  return (\n    <TailwindWrapper>\n      <Button {...props} />\n    </TailwindWrapper>\n  );\n};\n// exporting default will add tailwind otherwise it will not be specified within the app and up to the client\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,eAAe,MAAM,wBAAwB;;AAEpD;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC,OAAO;EAAEC,eAAe;EAAEC,IAAI;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,KAAK;EAC7E;EACA,MAAMC,aAAa,GAAIH,IAAI,IAAK;IAC9B,QAAQA,IAAI;MACV;MACA,KAAK,OAAO,IAAI,IAAI;QAClB,OAAO,SAAS;MAClB,KAAK,aAAa;QAChB,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMI,IAAI,GAAG,kIAAkI;EAC/I,MAAMC,MAAM,GAAGV,IAAI,CAAC;IAAE,UAAU,EAAEG;EAAQ,CAAC,EAAEK,aAAa,EAAEC,IAAI,CAAC;EACjE,oBACEZ,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBACEf,KAAA,CAAAc,aAAA,WAAAE,QAAA;IAAQC,IAAI,EAAC,QAAQ;IAACC,SAAS,EAAEN;EAAK,GAAKF,KAAK,GAC7CD,KACK,CAAC,eACTT,KAAA,CAAAc,aAAA;IAAGK,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ;EAAE,GAAC,OAAQ,CACtC,CAAC;AAEP,CAAC;AAEDf,MAAM,CAACgB,SAAS,GAAG;EACjB;AACF;AACA;EACEf,OAAO,EAAEL,SAAS,CAACqB,IAAI;EACvB;AACF;AACA;EACEf,eAAe,EAAEN,SAAS,CAACsB,MAAM;EACjC;AACF;AACA;EACEf,IAAI,EAAEP,SAAS,CAACuB,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;EACnD;AACF;AACA;EACEf,KAAK,EAAER,SAAS,CAACsB,MAAM,CAACE,UAAU;EAClC;AACF;AACA;EACEC,OAAO,EAAEzB,SAAS,CAAC0B;AACrB,CAAC;AAEDtB,MAAM,CAACuB,YAAY,GAAG;EACpBrB,eAAe,EAAE,IAAI;EACrBD,OAAO,EAAE,KAAK;EACdE,IAAI,EAAE,QAAQ;EACdkB,OAAO,EAAEG;AACX,CAAC;AAED,gBAAgBnB,KAAK,IAAK;EACxB,oBACEV,KAAA,CAAAc,aAAA,CAACV,eAAe,qBACdJ,KAAA,CAAAc,aAAA,CAACT,MAAM,EAAKK,KAAQ,CACL,CAAC;AAEtB,CAAC;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}