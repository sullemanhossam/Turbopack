{"version":3,"file":"story-Button-stories.3356108c724cf3269033.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://federated-library-from-cdn-remote-cdn/./src/components/Button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import \"./button.css\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  // const mode = primary ? \"storybook-button--primary\" : \"storybook-button--secondary\";\n  const getButtonSize = (size) => {\n    switch (size) {\n      case \"small\":\n        return \"size-sm\";\n      case \"large\":\n        return \"size-lg\";\n      default:\n        return \"size-md\";\n    }\n  };\n\n  const base = \"rounded-md bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\";\n  const styles = clsx({ pri: true }, getButtonSize, { bar: false }, base, { \"--foobar\": \"hello\" });\n  return (\n    // <button\n    //   type=\"button\"\n    //   className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n    //   style={backgroundColor && { backgroundColor }}\n    //   {...props}\n    // >\n    //   {label}\n    // </button>\n    <button type=\"button\" className={styles}>\n      Button text\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: \"medium\",\n  onClick: undefined,\n};\n\n// export {default} from  '../button'\n"],"names":[],"sourceRoot":""}