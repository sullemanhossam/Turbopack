"use strict";
self["webpackHotUpdatefederated_library_from_cdn_remote_cdn"]("storybook-Button-stories",{

/***/ "./src/components/button.jsx":
/*!***********************************!*\
  !*** ./src/components/button.jsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var _tailwind_wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tailwind.wrapper */ "./tailwind.wrapper.js");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * Primary UI component for user interaction
 */ var Button = function(_param) {
    var primary = _param.primary, backgroundColor = _param.backgroundColor, size = _param.size, label = _param.label, props = _object_without_properties(_param, [
        "primary",
        "backgroundColor",
        "size",
        "label"
    ]);
    // const mode = primary ? "storybook-button--primary" : "storybook-button--secondary";
    var getButtonSize = function(size) {
        switch(size){
            // shorthands are added to speed up stuff
            case "small" || 0:
                return "size-sm";
            case "large || lg":
                return "size-lg";
            default:
                return "size-md";
        }
    };
    var base = "rounded-md bg-black px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50";
    var styles = (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])({
        "bg-white": primary
    }, getButtonSize, base);
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", _object_spread({
        type: "button",
        className: base
    }, props), label), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", {
        style: {
            color: "green"
        }
    }, "hello"));
};
Button.propTypes = {
    /**
   * Is this the principal call to action on the page?
   */ primary: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
    /**
   * What background color to use
   */ backgroundColor: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
    /**
   * How large should the button be?
   */ size: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([
        "small",
        "medium",
        "large"
    ]),
    /**
   * Button contents
   */ label: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string).isRequired,
    /**
   * Optional click handler
   */ onClick: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)
};
Button.defaultProps = {
    backgroundColor: null,
    primary: false,
    size: "medium",
    onClick: undefined
};
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(props) {
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tailwind_wrapper__WEBPACK_IMPORTED_MODULE_1__["default"], null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Button, props));
};
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "backgroundColor": {
            "defaultValue": {
                "value": "null",
                "computed": false
            },
            "description": "What background color to use",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "primary": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "description": "Is this the principal call to action on the page?",
            "type": {
                "name": "bool"
            },
            "required": false
        },
        "size": {
            "defaultValue": {
                "value": "\"medium\"",
                "computed": false
            },
            "description": "How large should the button be?",
            "type": {
                "name": "enum",
                "value": [
                    {
                        "value": "\"small\"",
                        "computed": false
                    },
                    {
                        "value": "\"medium\"",
                        "computed": false
                    },
                    {
                        "value": "\"large\"",
                        "computed": false
                    }
                ]
            },
            "required": false
        },
        "onClick": {
            "defaultValue": {
                "value": "undefined",
                "computed": true
            },
            "description": "Optional click handler",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "label": {
            "description": "Button contents",
            "type": {
                "name": "string"
            },
            "required": true
        }
    }
};


/***/ })

});
//# sourceMappingURL=storybook-Button-stories.a9b338b1f10b4ac2b7e1.hot-update.js.map