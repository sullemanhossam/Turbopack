{"version":3,"file":"story-Button-stories.09ffb0564d9f69a9e80a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA","sources":["webpack://federated-library-from-cdn-remote-cdn/./src/components/button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Secondary } from \"../story/Button.stories\";\nimport clsx from \"clsx\";\nimport TailwindWrapper from \"../../tailwind.wrapper\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  // const mode = primary ? \"storybook-button--primary\" : \"storybook-button--secondary\";\n  const getButtonSize = (size) => {\n    switch (size) {\n      // shorthands are added to speed up stuff\n      case \"small\" || \"md\":\n        return \"size-sm\";\n      case \"large || lg\":\n        return \"size-lg\";\n      default:\n        return \"size-md\";\n    }\n  };\n\n  const base = \"rounded-md bg-black px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\";\n  const styles = clsx({ \"bg-white\": primary }, getButtonSize, base);\n  return (\n    <button stlye={{ backgroundColor: \"green\" }} type=\"button\" className={base} {...props}>\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: \"medium\",\n  onClick: undefined,\n};\n\nexport default (props) => {\n  return (\n    <TailwindWrapper>\n      <Button {...props} />\n    </TailwindWrapper>\n  );\n};\n// exporting default will add tailwind otherwise it will not be specified within the app and up to the client\n"],"names":[],"sourceRoot":""}