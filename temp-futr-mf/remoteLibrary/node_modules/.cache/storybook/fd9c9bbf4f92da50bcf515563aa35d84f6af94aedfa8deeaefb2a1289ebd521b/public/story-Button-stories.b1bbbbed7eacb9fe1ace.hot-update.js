"use strict";
self["webpackHotUpdatefederated_library_from_cdn_remote_cdn"]("story-Button-stories",{

/***/ "./src/components/Button.jsx":
/*!***********************************!*\
  !*** ./src/components/Button.jsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


// import "./button.css";
/**
 * Primary UI component for user interaction
 */ var Button = function(_param) {
    var primary = _param.primary, backgroundColor = _param.backgroundColor, size = _param.size, label = _param.label, props = _object_without_properties(_param, [
        "primary",
        "backgroundColor",
        "size",
        "label"
    ]);
    // const mode = primary ? "storybook-button--primary" : "storybook-button--secondary";
    var getButtonSize = function(size) {
        switch(size){
            case "small":
                return "size-sm";
            case "large":
                return "size-lg";
            default:
                return "size-md";
        }
    };
    var base = "rounded-md bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50";
    var styles = clsx({
        Secondary: true
    }, getButtonSize, {
        bar: false
    }, base, {
        "--foobar": "hello"
    });
    return(// <button
    //   type="button"
    //   className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}
    //   style={backgroundColor && { backgroundColor }}
    //   {...props}
    // >
    //   {label}
    // </button>
    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {
        type: "button",
        className: styles
    }, "Button text"));
};
Button.propTypes = {
    /**
   * Is this the principal call to action on the page?
   */ primary: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool),
    /**
   * What background color to use
   */ backgroundColor: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),
    /**
   * How large should the button be?
   */ size: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf([
        "small",
        "medium",
        "large"
    ]),
    /**
   * Button contents
   */ label: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string).isRequired,
    /**
   * Optional click handler
   */ onClick: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func)
};
Button.defaultProps = {
    backgroundColor: null,
    primary: false,
    size: "medium",
    onClick: undefined
};
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "backgroundColor": {
            "defaultValue": {
                "value": "null",
                "computed": false
            },
            "description": "What background color to use",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "primary": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "description": "Is this the principal call to action on the page?",
            "type": {
                "name": "bool"
            },
            "required": false
        },
        "size": {
            "defaultValue": {
                "value": "\"medium\"",
                "computed": false
            },
            "description": "How large should the button be?",
            "type": {
                "name": "enum",
                "value": [
                    {
                        "value": "\"small\"",
                        "computed": false
                    },
                    {
                        "value": "\"medium\"",
                        "computed": false
                    },
                    {
                        "value": "\"large\"",
                        "computed": false
                    }
                ]
            },
            "required": false
        },
        "onClick": {
            "defaultValue": {
                "value": "undefined",
                "computed": true
            },
            "description": "Optional click handler",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "label": {
            "description": "Button contents",
            "type": {
                "name": "string"
            },
            "required": true
        }
    }
};


/***/ })

});
//# sourceMappingURL=story-Button-stories.b1bbbbed7eacb9fe1ace.hot-update.js.map